{"version":3,"sources":["gchart_renderers.coffee","gchart_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","makeGoogleChart","rendererTrans","chartType","extraOptions","pivotData","opts","agg","base","chartHolder","colKey","colKeys","commonTextStyle","dataArray","dataTable","defaults","dh","fullAggName","groupByTitle","h","hAxisTitle","headers","i","imageLink","j","k","len","len1","len2","len3","maxCharsInLegend","numCharsInHAxis","options","ref","result","row","rowKey","rowKeys","title","tree2","vAxisTitle","val","wrapper","x","y","localeStrings","vs","by","and","openAsImage","gchart","extend","width","window","innerWidth","getRowKeys","length","push","getColKeys","pivotUtilities","locales","lang","aggregatorTrans","aggregatorName","valAttrs","join","results","getValueTranslation","unshift","tree","parseFloat","format","value","google","visualization","DataTable","getTranslation","colAttrs","dataTrans","rowAttrs","addColumn","type","role","addRows","getAggregator","isNumeric","toPrecision","toFixed","arrayToDataTable","fontSize","hAxis","slantedText","textStyle","titleTextStyle","vAxis","height","chartArea","top","tooltip","annotations","legend","minValue","position","left","css","right","append","ChartWrapper","draw","bind","open","getChart","getImageURI","editor","hasOwnProperty","ChartEditor","events","addListener","getChartWrapper","openDialog","console","log","gchart_renderers","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","en","ru","call","this"],"mappings":"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","file":"gchart_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n        \ncallWithJQuery ($) ->\n\n    makeGoogleChart = (chartType, extraOptions) -> (pivotData, opts) ->\n        defaults =\n            localeStrings:\n                vs: \"vs\"\n                by: \"by\"\n                and: \"and\"\n                openAsImage: \"As image\"\n            gchart: {}\n\n        opts = $.extend true, defaults, opts\n        opts.gchart.width ?= window.innerWidth / 1.4\n#        opts.gchart.height ?= window.innerHeight / 1.4\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n        fullAggName = $.pivotUtilities.locales[opts.lang].aggregatorTrans[pivotData.aggregatorName]\n        if pivotData.valAttrs.length\n            fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\n        headers = ($.pivotUtilities.getValueTranslation(h, opts.localeStrings).join(\"-\") for h in rowKeys)\n        headers.unshift \"\"\n\n        numCharsInHAxis = 0\n        if chartType == \"ScatterChart\"\n            dataArray = []\n            for y, tree2 of pivotData.tree\n                for x, agg of tree2\n                     dataArray.push [\n                        parseFloat(x),\n                        parseFloat(y),\n                        fullAggName+\": \\n\"+agg.format(agg.value())\n                        ]\n            dataTable = new google.visualization.DataTable()\n            hAxisTitle = $.pivotUtilities.getTranslation(pivotData.colAttrs,opts.dataTrans).join(\"-\")\n            vAxisTitle = $.pivotUtilities.getTranslation(pivotData.rowAttrs,opts.dataTrans).join(\"-\")\n            dataTable.addColumn 'number', hAxisTitle\n            dataTable.addColumn 'number', vAxisTitle\n            dataTable.addColumn type: \"string\", role: \"tooltip\"\n            dataTable.addRows dataArray\n            title = \"\"\n        else\n            dataArray = [headers]\n            for colKey in colKeys\n                row = [ $.pivotUtilities.getValueTranslation(colKey, opts.localeStrings).join(\"-\")]\n                numCharsInHAxis += row[0].length\n                for rowKey in rowKeys\n                    agg = pivotData.getAggregator(rowKey, colKey)\n                    if agg.value()?\n                        val = agg.value()\n                        if $.isNumeric val\n                            if val < 1\n                                row.push parseFloat(val.toPrecision(3))\n                            else\n                                row.push parseFloat(val.toFixed(3))\n                        else\n                            row.push val\n                    else row.push null\n                dataArray.push row\n\n            maxCharsInLegend = 0\n            for rowKey in rowKeys\n                len = rowKey.join(\"-\").length\n                maxCharsInLegend = len if maxCharsInLegend < len\n\n            dataTable = google.visualization.arrayToDataTable(dataArray)\n\n            title = vAxisTitle = fullAggName\n            hAxisTitle = $.pivotUtilities.getTranslation(pivotData.colAttrs,opts.dataTrans).join(\"-\")\n            groupByTitle = $.pivotUtilities.getTranslation(pivotData.rowAttrs,opts.dataTrans).join(\"-\")\n            if hAxisTitle != \"\" || groupByTitle != \"\"\n                title += \" #{opts.localeStrings.by}\"\n                title += \" #{hAxisTitle}\" if hAxisTitle != \"\"\n                title += \" #{opts.localeStrings.and}\" if hAxisTitle != \"\" && groupByTitle != \"\"\n                title += \" #{groupByTitle}\" if groupByTitle != \"\"\n\n        commonTextStyle = fontSize : 13\n        \n        options = \n            title: title\n            hAxis: title: hAxisTitle,slantedText: numCharsInHAxis > 50,textStyle: commonTextStyle,titleTextStyle: commonTextStyle\n            vAxis: title: vAxisTitle,textStyle: commonTextStyle,titleTextStyle: commonTextStyle\n            height: 800\n            chartArea: {width: '80%', top: '60', height: 500}\n            tooltip: textStyle: commonTextStyle\n            titleTextStyle: fontSize: 16\n            annotations: textStyle: commonTextStyle\n            legend: textStyle: commonTextStyle\n\n        if chartType == \"ColumnChart\"\n            options.vAxis.minValue = 0\n\n        if chartType == \"ScatterChart\"\n            options.legend = position: \"none\"\n            options.chartArea = {'width': '80%', 'height': '80%'}\n\n        else if dataArray[0].length == 2 and dataArray[0][1] ==  \"\"\n            options.legend = position: \"none\"\n        \n        $.extend options, opts.gchart, extraOptions\n\n        if chartType != \"ScatterChart\"\n            options.chartArea.width = colKeys.length*40\n            options.chartArea.width = 500 if options.chartArea.width < 500\n            options.width = (options.chartArea.width+200)\n            if maxCharsInLegend>4\n                options.width += maxCharsInLegend*6\n                options.chartArea.left = 100\n\n            if rowKeys.length > 22\n                dh =  (rowKeys.length - 22)*6\n                options.height += dh\n                options.chartArea.height += dh\n\n#        if options.width < opts.gchart.width\n#            options.width = opts.gchart.width\n#            options.chartArea = width: '80%', top: '60', height: '500'\n\n        result = $(\"<div>\").css(width: \"100%\", height: \"100%\", position: 'relative')\n        chartHolder = $(\"<div></div>\").css(width: \"100%\", height: \"800px\")\n        imageLink = $(\"<div><a class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-picture-o fa-fw\\\"></i> #{opts.localeStrings.openAsImage}</a></div>\").css(position: 'absolute', top:'10px', right:'10px')\n        $(result[0]).append(chartHolder,imageLink)\n        wrapper = new google.visualization.ChartWrapper {dataTable, chartType, options}\n        wrapper.draw(chartHolder[0])\n#        imageUrl = wrapper.getChart().getImageURI()\n        imageLink.bind \"click\", ->\n            window.open(wrapper.getChart().getImageURI(), '_blank');\n\n        chartHolder.bind \"dblclick\", ->\n            if google.visualization.hasOwnProperty('ChartEditor') and google.visualization.ChartEditor == 'function'\n                editor = new google.visualization.ChartEditor()\n                google.visualization.events.addListener editor, 'ok', ->\n                    editor.getChartWrapper().draw(chartHolder[0])\n                editor.openDialog(wrapper)\n            else console.log('ChartEditor not loaded')\n        return result\n\n    $.pivotUtilities.gchart_renderers = \n        \"Line Chart\": makeGoogleChart(\"LineChart\")\n        \"Bar Chart\": makeGoogleChart(\"ColumnChart\")\n        \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", isStacked: true)\n        \"Area Chart\": makeGoogleChart(\"AreaChart\", isStacked: true)\n        \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n\n    rendererTrans =\n        \"Line Chart\": \"Line Chart\"\n        \"Bar Chart\": \"Bar Chart\"\n        \"Stacked Bar Chart\": \"Stacked Bar Chart\"\n        \"Area Chart\": \"Area Chart\"\n        \"Scatter Chart\": \"Scatter Chart\"\n    $.pivotUtilities.locales.en.rendererTrans = $.extend($.pivotUtilities.locales.en.rendererTrans,rendererTrans);\n    \n    rendererTrans =\n        \"Line Chart\": \"Линейчатый график\"\n        \"Bar Chart\": \"Гистограмма\"\n        \"Stacked Bar Chart\": \"Гистограмма с накоплением\"\n        \"Area Chart\": \"Диаграммма с областями\"\n        \"Scatter Chart\": \"Точечная диаграмма\"    \n    $.pivotUtilities.locales.ru.rendererTrans = $.extend($.pivotUtilities.locales.ru.rendererTrans,rendererTrans);","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var makeGoogleChart, rendererTrans;\n    makeGoogleChart = function(chartType, extraOptions) {\n      return function(pivotData, opts) {\n        var agg, base, chartHolder, colKey, colKeys, commonTextStyle, dataArray, dataTable, defaults, dh, fullAggName, groupByTitle, h, hAxisTitle, headers, i, imageLink, j, k, len, len1, len2, len3, maxCharsInLegend, numCharsInHAxis, options, ref, result, row, rowKey, rowKeys, title, tree2, vAxisTitle, val, wrapper, x, y;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\",\n            and: \"and\",\n            openAsImage: \"As image\"\n          },\n          gchart: {}\n        };\n        opts = $.extend(true, defaults, opts);\n        if ((base = opts.gchart).width == null) {\n          base.width = window.innerWidth / 1.4;\n        }\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        fullAggName = $.pivotUtilities.locales[opts.lang].aggregatorTrans[pivotData.aggregatorName];\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.join(\", \")) + \")\";\n        }\n        headers = (function() {\n          var i, len1, results;\n          results = [];\n          for (i = 0, len1 = rowKeys.length; i < len1; i++) {\n            h = rowKeys[i];\n            results.push($.pivotUtilities.getValueTranslation(h, opts.localeStrings).join(\"-\"));\n          }\n          return results;\n        })();\n        headers.unshift(\"\");\n        numCharsInHAxis = 0;\n        if (chartType === \"ScatterChart\") {\n          dataArray = [];\n          ref = pivotData.tree;\n          for (y in ref) {\n            tree2 = ref[y];\n            for (x in tree2) {\n              agg = tree2[x];\n              dataArray.push([parseFloat(x), parseFloat(y), fullAggName + \": \\n\" + agg.format(agg.value())]);\n            }\n          }\n          dataTable = new google.visualization.DataTable();\n          hAxisTitle = $.pivotUtilities.getTranslation(pivotData.colAttrs, opts.dataTrans).join(\"-\");\n          vAxisTitle = $.pivotUtilities.getTranslation(pivotData.rowAttrs, opts.dataTrans).join(\"-\");\n          dataTable.addColumn('number', hAxisTitle);\n          dataTable.addColumn('number', vAxisTitle);\n          dataTable.addColumn({\n            type: \"string\",\n            role: \"tooltip\"\n          });\n          dataTable.addRows(dataArray);\n          title = \"\";\n        } else {\n          dataArray = [headers];\n          for (i = 0, len1 = colKeys.length; i < len1; i++) {\n            colKey = colKeys[i];\n            row = [$.pivotUtilities.getValueTranslation(colKey, opts.localeStrings).join(\"-\")];\n            numCharsInHAxis += row[0].length;\n            for (j = 0, len2 = rowKeys.length; j < len2; j++) {\n              rowKey = rowKeys[j];\n              agg = pivotData.getAggregator(rowKey, colKey);\n              if (agg.value() != null) {\n                val = agg.value();\n                if ($.isNumeric(val)) {\n                  if (val < 1) {\n                    row.push(parseFloat(val.toPrecision(3)));\n                  } else {\n                    row.push(parseFloat(val.toFixed(3)));\n                  }\n                } else {\n                  row.push(val);\n                }\n              } else {\n                row.push(null);\n              }\n            }\n            dataArray.push(row);\n          }\n          maxCharsInLegend = 0;\n          for (k = 0, len3 = rowKeys.length; k < len3; k++) {\n            rowKey = rowKeys[k];\n            len = rowKey.join(\"-\").length;\n            if (maxCharsInLegend < len) {\n              maxCharsInLegend = len;\n            }\n          }\n          dataTable = google.visualization.arrayToDataTable(dataArray);\n          title = vAxisTitle = fullAggName;\n          hAxisTitle = $.pivotUtilities.getTranslation(pivotData.colAttrs, opts.dataTrans).join(\"-\");\n          groupByTitle = $.pivotUtilities.getTranslation(pivotData.rowAttrs, opts.dataTrans).join(\"-\");\n          if (hAxisTitle !== \"\" || groupByTitle !== \"\") {\n            title += \" \" + opts.localeStrings.by;\n            if (hAxisTitle !== \"\") {\n              title += \" \" + hAxisTitle;\n            }\n            if (hAxisTitle !== \"\" && groupByTitle !== \"\") {\n              title += \" \" + opts.localeStrings.and;\n            }\n            if (groupByTitle !== \"\") {\n              title += \" \" + groupByTitle;\n            }\n          }\n        }\n        commonTextStyle = {\n          fontSize: 13\n        };\n        options = {\n          title: title,\n          hAxis: {\n            title: hAxisTitle,\n            slantedText: numCharsInHAxis > 50,\n            textStyle: commonTextStyle,\n            titleTextStyle: commonTextStyle\n          },\n          vAxis: {\n            title: vAxisTitle,\n            textStyle: commonTextStyle,\n            titleTextStyle: commonTextStyle\n          },\n          height: 800,\n          chartArea: {\n            width: '80%',\n            top: '60',\n            height: 500\n          },\n          tooltip: {\n            textStyle: commonTextStyle\n          },\n          titleTextStyle: {\n            fontSize: 16\n          },\n          annotations: {\n            textStyle: commonTextStyle\n          },\n          legend: {\n            textStyle: commonTextStyle\n          }\n        };\n        if (chartType === \"ColumnChart\") {\n          options.vAxis.minValue = 0;\n        }\n        if (chartType === \"ScatterChart\") {\n          options.legend = {\n            position: \"none\"\n          };\n          options.chartArea = {\n            'width': '80%',\n            'height': '80%'\n          };\n        } else if (dataArray[0].length === 2 && dataArray[0][1] === \"\") {\n          options.legend = {\n            position: \"none\"\n          };\n        }\n        $.extend(options, opts.gchart, extraOptions);\n        if (chartType !== \"ScatterChart\") {\n          options.chartArea.width = colKeys.length * 40;\n          if (options.chartArea.width < 500) {\n            options.chartArea.width = 500;\n          }\n          options.width = options.chartArea.width + 200;\n          if (maxCharsInLegend > 4) {\n            options.width += maxCharsInLegend * 6;\n            options.chartArea.left = 100;\n          }\n          if (rowKeys.length > 22) {\n            dh = (rowKeys.length - 22) * 6;\n            options.height += dh;\n            options.chartArea.height += dh;\n          }\n        }\n        result = $(\"<div>\").css({\n          width: \"100%\",\n          height: \"100%\",\n          position: 'relative'\n        });\n        chartHolder = $(\"<div></div>\").css({\n          width: \"100%\",\n          height: \"800px\"\n        });\n        imageLink = $(\"<div><a class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-picture-o fa-fw\\\"></i> \" + opts.localeStrings.openAsImage + \"</a></div>\").css({\n          position: 'absolute',\n          top: '10px',\n          right: '10px'\n        });\n        $(result[0]).append(chartHolder, imageLink);\n        wrapper = new google.visualization.ChartWrapper({\n          dataTable: dataTable,\n          chartType: chartType,\n          options: options\n        });\n        wrapper.draw(chartHolder[0]);\n        imageLink.bind(\"click\", function() {\n          return window.open(wrapper.getChart().getImageURI(), '_blank');\n        });\n        chartHolder.bind(\"dblclick\", function() {\n          var editor;\n          if (google.visualization.hasOwnProperty('ChartEditor') && google.visualization.ChartEditor === 'function') {\n            editor = new google.visualization.ChartEditor();\n            google.visualization.events.addListener(editor, 'ok', function() {\n              return editor.getChartWrapper().draw(chartHolder[0]);\n            });\n            return editor.openDialog(wrapper);\n          } else {\n            return console.log('ChartEditor not loaded');\n          }\n        });\n        return result;\n      };\n    };\n    $.pivotUtilities.gchart_renderers = {\n      \"Line Chart\": makeGoogleChart(\"LineChart\"),\n      \"Bar Chart\": makeGoogleChart(\"ColumnChart\"),\n      \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", {\n        isStacked: true\n      }),\n      \"Area Chart\": makeGoogleChart(\"AreaChart\", {\n        isStacked: true\n      }),\n      \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n    };\n    rendererTrans = {\n      \"Line Chart\": \"Line Chart\",\n      \"Bar Chart\": \"Bar Chart\",\n      \"Stacked Bar Chart\": \"Stacked Bar Chart\",\n      \"Area Chart\": \"Area Chart\",\n      \"Scatter Chart\": \"Scatter Chart\"\n    };\n    $.pivotUtilities.locales.en.rendererTrans = $.extend($.pivotUtilities.locales.en.rendererTrans, rendererTrans);\n    rendererTrans = {\n      \"Line Chart\": \"Линейчатый график\",\n      \"Bar Chart\": \"Гистограмма\",\n      \"Stacked Bar Chart\": \"Гистограмма с накоплением\",\n      \"Area Chart\": \"Диаграммма с областями\",\n      \"Scatter Chart\": \"Точечная диаграмма\"\n    };\n    return $.pivotUtilities.locales.ru.rendererTrans = $.extend($.pivotUtilities.locales.ru.rendererTrans, rendererTrans);\n  });\n\n}).call(this);\n\n//# sourceMappingURL=gchart_renderers.js.map\n"]}